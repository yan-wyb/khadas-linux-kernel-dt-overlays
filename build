#!/bin/bash

## hyphop ##

#= build dt overlays

FAIL(){
    echo "[e] $@">&2
    exit 1
}
LOG(){
    echo "[i] $@"
}
CMD(){
    echo "[#] $@">&2
    "$@"
}
which dtc >/dev/null 2>&1 || FAIL "dtc not found"

D=$(dirname "$0")

LOG "build dt overlsys"

OVL=overlays
BIN=$D/bin
mkdir -p $BIN

rm -rf $BIN/*

if [ "$1" = "clean" ]; then
	rm -rf $BIN *.deb
	exit
fi

find $D/$OVL -name *.dts | while read r ; do
#    LOG "+ $r"
    dtbo=${r#*$OVL/}
    dtbo=${dtbo%.*}.dtbo
    dts=${dtbo%.*}.dts
    dtbd="$BIN/${dtbo%/*}"
    mkdir -p "$dtbd"
    #CMD cp "$r" "$BIN/$dts"
    dtc -@ "$r" -o "$BIN/$dtbo"
done

if [ "$1" = "debian" ]; then
	debian_package_path=$D/.tmp/
	mkdir -p $debian_package_path
	for control in `ls $D/debian/control.*`
	do
		debian_package=`cat $control | grep "Package: " | awk '{print $2}'`
		ver=`cat $control | grep "Version: " | awk '{print $2}'`
		ver=${ver/GITREV/`git describe --abbrev=7 --dirty --always`}
		debian_package=${debian_package}_${ver}_arm64
		board=`echo $debian_package | awk -F "-" '{print $2}'`
		linux=`echo $debian_package | awk -F "-" '{print $4}'`
		rm -rf $debian_package_path/$debian_package
		mkdir -p $debian_package_path/$debian_package/DEBIAN
		cp -r $control $debian_package_path/$debian_package/DEBIAN/control
		sed -i s/GITREV/`git describe --abbrev=7 --dirty --always`/g $debian_package_path/$debian_package/DEBIAN/control
		if [ "$board" = "vim4" ] || [ "$board" = "vim1s" ]; then
			vendor=amlogic
			overlay_dir=k${board}.dtb.overlays
			overlay_env=k${board}.dtb.overlay.env
		elif [ "$board" = "edge2" ]; then
			vendor=rockchip
			overlay_dir=rk3588s-khadas-edge2.dtb.overlays
			overlay_env=rk3588s-khadas-edge2.dtb.overlay.env
		fi
		overlay_path=$debian_package_path/$debian_package/boot/overlays/${overlay_dir}
		mkdir -p $overlay_path
		cp $BIN/$board/$linux/*.dtbo $overlay_path

		cat <<-EOF > $debian_package_path/$debian_package/DEBIAN/preinst
		#!/bin/bash

		[ ! -L /boot/dtb/${vendor}/${overlay_env} ] && echo \`readlink /boot/dtb\` > /boot/.dtb.tmp && rm /boot/dtb/${vendor}/${overlay_env}

		exit 0
		EOF
		chmod 755 $debian_package_path/$debian_package/DEBIAN/preinst

		cat <<-EOF > $debian_package_path/$debian_package/DEBIAN/postinst
		#!/bin/bash

		[ ! -f /boot/overlays/$overlay_env ] && echo "fdt_overlays=" > /boot/overlays/$overlay_env
		[ -f /boot/.dtb.tmp ] && (cd /boot; [ ! -L dtb ] && ln -fs \`cat /boot/.dtb.tmp\` dtb) && rm /boot/.dtb.tmp
		cd /boot/dtb/$vendor
		[ ! -L /boot/dtb/${vendor}/${overlay_dir} ] && ln -fs ../../overlays/${overlay_dir} ${overlay_dir}
		[ ! -L /boot/dtb/${vendor}/${overlay_env} ] && ln -fs ../../overlays/$overlay_env ${overlay_env}
		cd - > /dev/null

		exit 0
		EOF
		chmod 755 $debian_package_path/$debian_package/DEBIAN/postinst

		fakeroot dpkg -b $debian_package_path/$debian_package
		mv $debian_package_path/${debian_package}.deb .
		rm -rf $debian_package_path/${debian_package}
	done

	rm -rf $debian_package_path
fi
